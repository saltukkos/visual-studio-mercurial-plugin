<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0">

    <Style x:Key="VsBaseThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Foreground" Value="Green"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="thumbRectangle"
                               Fill="{DynamicResource {x:Static vs:EnvironmentColors.ScrollBarThumbBackgroundBrushKey}}"
                               Stroke="{DynamicResource {x:Static vs:EnvironmentColors.ScrollBarThumbBorderBrushKey}}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="thumbRectangle" Property="Fill"
                                    Value="{DynamicResource {x:Static vs:EnvironmentColors.ScrollBarThumbMouseOverBackgroundBrushKey}}" />
                            <Setter TargetName="thumbRectangle" Property="Stroke"
                                    Value="{DynamicResource {x:Static vs:EnvironmentColors.ScrollBarThumbMouseOverBorderBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="thumbRectangle" Property="Fill"
                                    Value="{DynamicResource {x:Static vs:EnvironmentColors.ScrollBarThumbPressedBackgroundBrushKey}}" />
                            <Setter TargetName="thumbRectangle" Property="Stroke"
                                    Value="{DynamicResource {x:Static vs:EnvironmentColors.ScrollBarThumbPressedBorderBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarThumbStyle" BasedOn="{StaticResource VsBaseThumbStyle}" TargetType="Thumb">
        <Setter Property="Margin" Value="0,4,0,4"/>
    </Style>
    <Style x:Key="VerticalScrollBarThumbStyle" BasedOn="{StaticResource VsBaseThumbStyle}" TargetType="Thumb">
        <Setter Property="Margin" Value="4,0,4,0"/>
    </Style>

    <Style x:Key="ArrowRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Margin="1">
                        <Path Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Name="Path"
                              Fill="{DynamicResource {x:Static vs:EnvironmentColors.ScrollBarArrowGlyphBrushKey}}"
                              Data="M 0 8 L 10 8 L 5 2 Z" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Path" Property="Fill"
                                    Value="{DynamicResource {x:Static vs:EnvironmentColors.ScrollBarArrowGlyphMouseOverBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Path" Property="Fill"
                                    Value="{DynamicResource {x:Static vs:EnvironmentColors.ScrollBarArrowGlyphPressedBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}" >
        <Grid Background="{DynamicResource {x:Static vs:EnvironmentColors.ScrollBarBackgroundBrushKey}}">
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <RepeatButton Grid.Row="0" Height="16" Style="{StaticResource ArrowRepeatButtonStyle}" Command="ScrollBar.LineUpCommand" />

            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True" >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource VerticalScrollBarThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                    </RepeatButton>
                </Track.IncreaseRepeatButton>
            </Track>

            <RepeatButton Grid.Row="2" Height="16" Style="{StaticResource ArrowRepeatButtonStyle}" Command="ScrollBar.LineDownCommand" >
                <RepeatButton.RenderTransform>
                    <RotateTransform CenterX="8" CenterY="8" Angle="180" />
                </RepeatButton.RenderTransform>
            </RepeatButton>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Background="{DynamicResource {x:Static vs:EnvironmentColors.ScrollBarBackgroundBrushKey}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition MaxWidth="18"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <RepeatButton Grid.Column="0" Width="16" Style="{StaticResource ArrowRepeatButtonStyle}" Command="ScrollBar.LineLeftCommand">
                <RepeatButton.RenderTransform>
                    <RotateTransform CenterX="8" CenterY="8" Angle="-90" />
                </RepeatButton.RenderTransform>
            </RepeatButton>

            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False" >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                    </RepeatButton>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource HorizontalScrollBarThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButtonStyle}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2" Width="16" Style="{StaticResource ArrowRepeatButtonStyle}" Command="ScrollBar.LineRightCommand">
                <RepeatButton.RenderTransform>
                    <RotateTransform CenterX="8" CenterY="8" Angle="90" />
                </RepeatButton.RenderTransform>
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="16" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>